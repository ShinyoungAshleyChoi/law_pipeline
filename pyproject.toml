[project]
name = "legal-data-pipeline"
version = "0.1.0"
description = "법제처 API 데이터 파이프라인 - 법령 및 조항 데이터 수집/관리 시스템"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # Database
    "mysql-connector-python>=8.2.0",
    "PyMySQL>=1.1.0",
    "SQLAlchemy>=1.4.28,<2.0",
    "pyyaml>=6.0.1",
    "python-dotenv>=1.0.0",
    "structlog>=23.2.0",
    "colorlog>=6.8.0",
    # HTTP & API
    "requests>=2.31.0",
    "urllib3>=2.1.0",
    "httpx>=0.25.2",
    # Data Processing
    "pandas>=2.1.4",
    "numpy>=1.25.2",
    # Workflow & Messaging
    "apache-airflow>=2.10.0",
    "kafka-python>=2.0.2",
    "confluent-kafka>=2.3.0",
    # Caching & Storage
    "redis>=5.0.1",
    "hiredis>=2.3.2",
    # Notifications
    "slack-sdk>=3.26.0",
    # Utilities
    "click>=8.1.7",
    "rich>=13.7.0",
    "typer>=0.9.0",
    "apache-airflow-providers-standard>=1.7.0",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=7.4.3",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.1",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
]

# Blue-Green deployment dependencies
deployment = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "prometheus-client>=0.19.0",
]

# Monitoring dependencies
monitoring = [
    "grafana-api>=1.0.3",
    "prometheus-api-client>=0.5.3",
]

# All optional dependencies
all = [
    "legal-data-pipeline[dev,deployment,monitoring]"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py311']  # py312 → py311로 통일
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "airflow: marks tests as airflow DAG tests",
    "bluegreen: marks tests as blue-green deployment tests",
]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
